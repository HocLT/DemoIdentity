@model IEnumerable<DemoIdentity.Models.Category>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParentCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            int level = 0;
            await RenderTable(item, level);
        }
    </tbody>
</table>
@*viết razor code build title dạng phân cấp*@
@{
    async Task RenderTable(Category  cate, int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;", level));

        <tr>
            <td>
                @Html.Raw(prefix) @Html.DisplayFor(modelItem => cate.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => cate.ParentCategory.Title)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@cate.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@cate.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@cate.Id">Delete</a>
            </td>
        </tr>

        if (cate.CategoryChildren != null && cate.CategoryChildren.Count > 0)
        {
            foreach (var item in cate.CategoryChildren)
            {
                await RenderTable(item, level + 1);
            }
        }
    }
}